import { sequelize } from "../config/db";

// ◊û◊ô◊ô◊ë◊ê ◊ê◊™ ◊õ◊ú ◊î◊û◊ï◊ì◊ú◊ô◊ù
import Supplier from "./Supplier";
import Location from "./Location";
import Catering from "./Catering";
import Photographer from "./Photographer";
import Speaker from "./Speaker";
import DJ from "./DJ";
import User from "./User";
import Event from "./event";
import EventSupplier from "./EventSupplier";
import Guest from "./Guest";

// üîó ◊î◊í◊ì◊®◊™ ◊ß◊©◊®◊ô◊ù ◊ë◊ô◊ü ◊û◊ï◊ì◊ú◊ô◊ù

// ◊°◊§◊ß◊ô◊ù ‚Üî ◊§◊®◊ò◊ô ◊©◊ô◊®◊ï◊™
Supplier.hasMany(Location, { foreignKey: "supplier_id" });
Supplier.hasMany(Catering, { foreignKey: "supplier_id" });
Supplier.hasMany(Photographer, { foreignKey: "supplier_id" });
Supplier.hasMany(Speaker, { foreignKey: "supplier_id" });
Supplier.hasMany(DJ, { foreignKey: "supplier_id" });

// ◊û◊©◊™◊û◊©◊ô◊ù ‚Üî ◊ê◊ô◊®◊ï◊¢◊ô◊ù
User.hasMany(Event, { foreignKey: "user_id" });
Event.belongsTo(User, { foreignKey: "user_id" });

// ◊ê◊ô◊®◊ï◊¢◊ô◊ù ‚Üî ◊°◊§◊ß◊ô◊ù (◊ß◊©◊® ◊®◊ë◊ô◊ù-◊ú◊®◊ë◊ô◊ù)
Event.belongsToMany(Supplier, {
  through: EventSupplier,
  foreignKey: "event_id",
});
Supplier.belongsToMany(Event, {
  through: EventSupplier,
  foreignKey: "supplier_id",
});

// ◊ê◊ô◊®◊ï◊¢ ‚Üî ◊ê◊ï◊®◊ó◊ô◊ù
Event.hasMany(Guest, { foreignKey: "event_id" });

// ◊ô◊ô◊¶◊ï◊ê ◊î◊û◊ï◊ì◊ú◊ô◊ù ◊ï◊î÷æsequelize
export {
  sequelize,
  Supplier,
  Location,
  Catering,
  Photographer,
  Speaker,
  DJ,
  User,
  Event,
  EventSupplier,
  Guest,
};

// ◊°◊†◊õ◊®◊ï◊ü ◊û◊ï◊ú ◊û◊°◊ì ◊î◊†◊™◊ï◊†◊ô◊ù
export const syncDatabase = async () => {
  try {
    await sequelize.sync({ alter: true });
    console.log("‚úÖ Database synced successfully.");
  } catch (error) {
    console.error("‚ùå Error syncing database:", error);
  }
};
